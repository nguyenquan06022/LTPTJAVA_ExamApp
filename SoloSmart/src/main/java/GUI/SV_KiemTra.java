/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import Dao.*;
import Entity.*;
import service.RmiServiceLocator;

import java.rmi.RemoteException;
import java.time.Duration;
import java.time.LocalDateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;
import javax.swing.*;

/**
 *
 * @author THANH PHU
 */
public class SV_KiemTra extends javax.swing.JFrame {

    /**
     * Creates new form SV_KiemTra
     */
    private IBaiKiemTra_DAO bkt_dao = RmiServiceLocator.getBaiKiemTraDao();
    private ICauHoi_DAO chdao = RmiServiceLocator.getCauHoiDao();
    private IDeThi_DAO dt_dao = RmiServiceLocator.getDeThiDao();
    private IDsCauTraLoi_DAO IDsCauTraLoi_DAO = RmiServiceLocator.getDsCauTraLoiDao();
    private IKetQuaKiemTra_DAO IKetQuaKiemTra_DAO = RmiServiceLocator.getKetQuaKiemTraDao();
    private IKetQuaHocTap_DAO IKetQuaHocTap_DAO = RmiServiceLocator.getKetQuaHocTapDao();
    private BaiKiemTra baiKiemTra;
    private TaiKhoan tk;
    private LocalDateTime startTime;
    private LocalDateTime endTime;
    private int thoiGianConLai;
    private Timer timer;

    public void checkThoiGianConLai() {
        timer = new Timer(1000, e -> {
            LocalDateTime now = LocalDateTime.now();

            // Kiểm tra nếu thời gian hiện tại đã qua thời gian kết thúc hoặc thời gian còn
            // lại <= 0
            if (now.isAfter(endTime) || thoiGianConLai <= 0) {
                timer.stop(); // Dừng Timer
                JOptionPane.showMessageDialog(this, "Đã hết giờ làm bài!", "Thông báo", JOptionPane.WARNING_MESSAGE);
                try {
                    button1ActionPerformed(null); // Gọi sự kiện nộp bài
                } catch (RemoteException ex) {
                    throw new RuntimeException(ex);
                }
                return;
            }

            thoiGianConLai--;

            // Cập nhật label thời gian còn lại theo định dạng mm:ss
            int minutes = thoiGianConLai / 60;
            int seconds = thoiGianConLai % 60;
            lbThoiGianConLai.setText(String.format("%02d:%02d", minutes, seconds));
        });

        timer.start(); // Bắt đầu đếm ngược
    }

    public SV_KiemTra() throws RemoteException {
        initComponents();
    }

    public SV_KiemTra(BaiKiemTra bkt) throws RemoteException {
        this.baiKiemTra = bkt;
        System.out.println(bkt);
        this.thoiGianConLai = bkt.getThoiGianLamBai() * 60;
        this.tk = Main_GUI.tk;
        initComponents();
        ArrayList<CauHoi> dsCauHoi = chdao.getDsCauHoiTheoDeThi(bkt.getDeThi().getMaDeThi());
        listCauHoiKiemTra1.updateList(dsCauHoi);
        startTime = LocalDateTime.now(); // Ghi lại thời gian bắt đầu
        endTime = baiKiemTra.getThoiGianKetThuc();
        checkThoiGianConLai();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() throws RemoteException {

        jPanel1 = new javax.swing.JPanel();
        listCauHoiKiemTra1 = new Components.ListCauHoiKiemTra();
        circleBackgroundPanel1 = new Components.CircleBackgroundPanel();
        button1 = new Components.Button();
        lbThoiGianConLai = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(listCauHoiKiemTra1, javax.swing.GroupLayout.DEFAULT_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(0, 0, 0)));
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, 0)
                                .addComponent(listCauHoiKiemTra1, javax.swing.GroupLayout.DEFAULT_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

        circleBackgroundPanel1.setColor1(new java.awt.Color(58, 138, 125));

        button1.setBackground(new java.awt.Color(0, 0, 0));
        button1.setForeground(new java.awt.Color(255, 255, 255));
        button1.setText("Nộp bài");
        button1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    button1ActionPerformed(evt);
                } catch (RemoteException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        lbThoiGianConLai.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbThoiGianConLai.setForeground(new java.awt.Color(255, 255, 255));
        lbThoiGianConLai.setText("12:20");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Thời gian còn lại:");

        javax.swing.GroupLayout circleBackgroundPanel1Layout = new javax.swing.GroupLayout(circleBackgroundPanel1);
        circleBackgroundPanel1.setLayout(circleBackgroundPanel1Layout);
        circleBackgroundPanel1Layout.setHorizontalGroup(
                circleBackgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(circleBackgroundPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(circleBackgroundPanel1Layout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(button1, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(circleBackgroundPanel1Layout.createSequentialGroup()
                                                .addGroup(circleBackgroundPanel1Layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING,
                                                                false)
                                                        .addComponent(lbThoiGianConLai,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(0, 57, Short.MAX_VALUE)))
                                .addContainerGap()));
        circleBackgroundPanel1Layout.setVerticalGroup(
                circleBackgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, circleBackgroundPanel1Layout
                                .createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbThoiGianConLai)
                                .addGap(18, 18, 18)
                                .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(circleBackgroundPanel1, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(circleBackgroundPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) throws RemoteException {// GEN-FIRST:event_button1ActionPerformed
        System.out.println(this.baiKiemTra);
        LocalDateTime endTime = LocalDateTime.now(); // Thời gian kết thúc
        long durationInMinutes = Duration.between(startTime, endTime).toMinutes(); // Tính phút

        if (durationInMinutes == 0) {
            durationInMinutes = 1;
        }
        // tạo kết quả kiểm tra
        String maKqkt = IKetQuaKiemTra_DAO.generateMa();
        boolean diemCaoNhat = true;
        float diemSo = 0;
        int lanThu = 1;

        int thoiGianLamBai = (int) durationInMinutes;
        List<Boolean> kq = new ArrayList<>();
        
        KetQuaKiemTra ketQuaKiemTra = new KetQuaKiemTra(maKqkt, diemSo, thoiGianLamBai, lanThu, diemCaoNhat, this.baiKiemTra, tk);
        System.out.println(ketQuaKiemTra);
        List<String> dsCauTraLoi = listCauHoiKiemTra1.getDsLuaChonCuaSinhVien();
        
        System.out.println(dsCauTraLoi);
        ketQuaKiemTra.setDsCauTraLoi(dsCauTraLoi);
        boolean res1 = IKetQuaKiemTra_DAO.themKetQuaKiemTra(ketQuaKiemTra);
        System.out.println(ketQuaKiemTra);
        if(res1) {
            for (String cauTraLoi : dsCauTraLoi) {
                kq.add(IDsCauTraLoi_DAO.themCauTraLoiCuaSinhVien(maKqkt, cauTraLoi));
                System.out.println(kq);
            }
                // tinhDiemChoSinhVien
                float diem = IKetQuaKiemTra_DAO.tinhDiemChoSinhVien(baiKiemTra.getMaBaiKiemTra(),maKqkt);
                // update điểm
                IKetQuaKiemTra_DAO.updateKetQuaKiemTra(
                        new KetQuaKiemTra(maKqkt, diem, thoiGianLamBai, lanThu, diemCaoNhat, baiKiemTra, tk));
                // updateDiemCaoNhatChoBaiKiemTraCuaSinhVien
                IKetQuaKiemTra_DAO.updateDiemCaoNhatChoBaiKiemTraCuaSinhVien(tk.getMaTaiKhoan(),
                        baiKiemTra.getMaBaiKiemTra());

                // cập nhật lại kết quả học tập của sinh viên
                Map<String, Float> map = IKetQuaHocTap_DAO.getDiemHocTapCuaSinhVien(tk.getMaTaiKhoan(),
                        baiKiemTra.getLopHoc().getMaLop());
                List<String> key = map.entrySet().stream().map(x -> x.getKey()).collect(Collectors.toList());

                float diemThuongKy = -1;
                float diemGiuaKy = -1;
                float diemCuoiKy = -1;
                if (key.contains("0.2")) {
                    diemThuongKy = map.get("0.2");
                } else if (key.contains("0.3")) {
                    diemGiuaKy = map.get("0.3");
                } else if (key.contains("0.5")) {
                    diemCuoiKy = map.get("0.5");
                }
                float diemTBMon = -1;
                if (!(diemThuongKy == -1 || diemGiuaKy == -1 || diemCuoiKy == -1)) {
                    diemTBMon = (float) (diemThuongKy * 0.2 + diemGiuaKy * 0.3 + diemCuoiKy * 0.5);
                }

                KetQuaHocTap ketQuaHocTapNew = new KetQuaHocTap(diemThuongKy, diemGiuaKy, diemCuoiKy, diemTBMon, tk,
                        new LopHoc(baiKiemTra.getLopHoc().getMaLop()));

                IKetQuaHocTap_DAO.capNhatKetQuaHocTap(ketQuaHocTapNew);

            }
        if (timer != null && timer.isRunning()) {
            timer.stop();
        }
        dispose();
    }// GEN-LAST:event_button1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SV_KiemTra.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SV_KiemTra.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SV_KiemTra.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SV_KiemTra.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new SV_KiemTra().setVisible(true);
                } catch (RemoteException e) {
                    throw new RuntimeException(e);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private Components.Button button1;
    private Components.CircleBackgroundPanel circleBackgroundPanel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbThoiGianConLai;
    private Components.ListCauHoiKiemTra listCauHoiKiemTra1;
    // End of variables declaration//GEN-END:variables
}
