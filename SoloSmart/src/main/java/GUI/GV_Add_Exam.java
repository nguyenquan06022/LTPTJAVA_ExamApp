/*
     * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
     * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import Components.CauHoiDeThi;
import Components.ComboBoxSuggestion;
import Dao.CauHoi_DAO;
import Dao.DeThi_DAO;
import Dao.DsLuaChon_DAO;
import Dao.MonHoc_DAO;
import Entity.*;
import org.apache.poi.xwpf.usermodel.XWPFDocument;
import org.apache.poi.xwpf.usermodel.XWPFParagraph;

import java.awt.Color;
import java.io.File;
import java.io.FileInputStream;
import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import javax.swing.*;
import jnafilechooser.api.JnaFileChooser;

/**
 *
 * @author THANH PHU
 */
public class GV_Add_Exam extends javax.swing.JPanel {

    private MonHoc_DAO monHoc_DAO = new MonHoc_DAO(Main_GUI.em);
    private DeThi_DAO deThi_DAO = new DeThi_DAO(Main_GUI.em);
    private CauHoi_DAO cauHoiDao = new CauHoi_DAO(Main_GUI.em);
    private DsLuaChon_DAO dsLuaChonDao = new DsLuaChon_DAO(Main_GUI.em);
    private String maDeThi;

    public GV_Add_Exam() {
        initComponents();
        loadListMonHoc();
        btnSua.setVisible(false);
        btnSua.setVisible(false);
    }

    public GV_Add_Exam(DeThi deThi) {
        this.maDeThi = deThi.getMaDeThi();
        List<CauHoi> dsCauHoi = cauHoiDao.getDsCauHoiTheoDeThi(deThi.getMaDeThi());
        List<LuaChons> dsLuaChon = dsLuaChonDao.getDSLuaChonTheoDeThi(deThi.getMaDeThi());
        initComponents();
        loadListMonHoc();
        listcauHoiDeThi1.updateListcauHoiDeThi(deThi.getMaDeThi(), dsCauHoi, dsLuaChon);
        tfTenDeThi.setText(deThi.getTenDeThi());
        btnTaoDeThi.setVisible(false);
        button1.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        circleBackgroundPanel1 = new Components.CircleBackgroundPanel();
        jLabel1 = new javax.swing.JLabel();
        btnTaoDeThi = new Components.Button();
        jLabel2 = new javax.swing.JLabel();
        sliderGradient1 = new Components.SliderGradient();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tfTenDeThi = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        cbbMonHoc = new Components.ComboBoxSuggestion();
        button1 = new Components.Button();
        jPanel1 = new javax.swing.JPanel();
        btnSua = new Components.Button();
        btnHuy = new Components.Button();
        listcauHoiDeThi1 = new Components.ListcauHoiDeThi();

        circleBackgroundPanel1.setColor1(new java.awt.Color(58, 138, 125));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Số lượng:");

        btnTaoDeThi.setBackground(new java.awt.Color(0, 0, 0));
        btnTaoDeThi.setForeground(new java.awt.Color(255, 255, 255));
        btnTaoDeThi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-add-30.png"))); // NOI18N
        btnTaoDeThi.setText("Tạo");
        btnTaoDeThi.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnTaoDeThi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaoDeThiActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("10 câu hỏi");

        sliderGradient1.setForeground(new java.awt.Color(255, 255, 255));
        sliderGradient1.setMajorTickSpacing(10);
        sliderGradient1.setMinimum(10);
        sliderGradient1.setPaintLabels(true);
        sliderGradient1.setPaintTicks(true);
        sliderGradient1.setValue(10);
        sliderGradient1.setColor1(new java.awt.Color(58, 138, 125));
        sliderGradient1.setColor2(new java.awt.Color(150, 91, 155));
        sliderGradient1.setTicksColor(new java.awt.Color(255, 255, 255));
        sliderGradient1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderGradient1StateChanged(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Tên đề thi:");

        tfTenDeThi.setColumns(20);
        tfTenDeThi.setLineWrap(true);
        tfTenDeThi.setRows(5);
        tfTenDeThi.setWrapStyleWord(true);
        jScrollPane1.setViewportView(tfTenDeThi);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Tên môn học:");

        cbbMonHoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbMonHocActionPerformed(evt);
            }
        });

        button1.setBackground(new java.awt.Color(58, 138, 125));
        button1.setForeground(new java.awt.Color(255, 255, 255));
        button1.setText("Tải đề thi từ file");
        button1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });

        jPanel1.setOpaque(false);

        btnSua.setBackground(new java.awt.Color(0, 0, 0));
        btnSua.setForeground(new java.awt.Color(255, 255, 255));
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-edit-30.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnHuy.setBackground(new java.awt.Color(58, 138, 125));
        btnHuy.setForeground(new java.awt.Color(255, 255, 255));
        btnHuy.setText("Hủy");
        btnHuy.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnSua, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnHuy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnHuy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout circleBackgroundPanel1Layout = new javax.swing.GroupLayout(circleBackgroundPanel1);
        circleBackgroundPanel1.setLayout(circleBackgroundPanel1Layout);
        circleBackgroundPanel1Layout.setHorizontalGroup(
            circleBackgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(circleBackgroundPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(circleBackgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(button1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(sliderGradient1, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
                    .addComponent(btnTaoDeThi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(circleBackgroundPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(cbbMonHoc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(circleBackgroundPanel1Layout.createSequentialGroup()
                        .addGroup(circleBackgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        circleBackgroundPanel1Layout.setVerticalGroup(
            circleBackgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(circleBackgroundPanel1Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(circleBackgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(sliderGradient1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbbMonHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTaoDeThi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(circleBackgroundPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(listcauHoiDeThi1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(listcauHoiDeThi1, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
            .addComponent(circleBackgroundPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    private void initComponents(DeThi deThi) {
            // lấy ra danh sách câu hỏi
            List<CauHoi> dsCauHoi = cauHoiDao.getDsCauHoiTheoDeThi(deThi.getMaDeThi());
            List<LuaChons> dsLuaChon = dsLuaChonDao.getDSLuaChonTheoDeThi(deThi.getMaDeThi());

            circleBackgroundPanel1 = new Components.CircleBackgroundPanel();
            jLabel1 = new javax.swing.JLabel();
            btnTaoDeThi = new Components.Button();
            jLabel2 = new javax.swing.JLabel();
            sliderGradient1 = new Components.SliderGradient();
            jLabel3 = new javax.swing.JLabel();
            jScrollPane1 = new javax.swing.JScrollPane();
            tfTenDeThi = new javax.swing.JTextArea();
            jLabel4 = new javax.swing.JLabel();
            cbbMonHoc = new Components.ComboBoxSuggestion();
            button1 = new Components.Button();
//            listcauHoiDeThi1 = new Components.ListcauHoiDeThi(deThi.getMaDeThi(), dsCauHoi, dsLuaChon);

            circleBackgroundPanel1.setColor1(new java.awt.Color(58, 138, 125));

            jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
            jLabel1.setForeground(new java.awt.Color(255, 255, 255));
            jLabel1.setText("Số lượng:");

            btnTaoDeThi.setBackground(new java.awt.Color(0, 0, 0));
            btnTaoDeThi.setForeground(new java.awt.Color(255, 255, 255));
            btnTaoDeThi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-add-30.png"))); // NOI18N
            btnTaoDeThi.setText("Tạo");
            btnTaoDeThi.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
            btnTaoDeThi.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnTaoDeThiActionPerformed(evt);
                }
            });

            jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
            jLabel2.setForeground(new java.awt.Color(255, 255, 255));
            jLabel2.setText(deThi.getSoLuongCauHoi() + " câu hỏi");

            sliderGradient1.setForeground(new java.awt.Color(255, 255, 255));
            sliderGradient1.setMajorTickSpacing(10);
            sliderGradient1.setMinimum(10);
            sliderGradient1.setPaintLabels(true);
            sliderGradient1.setPaintTicks(true);
            sliderGradient1.setValue(deThi.getSoLuongCauHoi());
            sliderGradient1.setColor1(new java.awt.Color(58, 138, 125));
            sliderGradient1.setColor2(new java.awt.Color(150, 91, 155));
            sliderGradient1.setTicksColor(new java.awt.Color(255, 255, 255));
            sliderGradient1.addChangeListener(new javax.swing.event.ChangeListener() {
                public void stateChanged(javax.swing.event.ChangeEvent evt) {
                    sliderGradient1StateChanged(evt);
                }
            });

            jLabel3.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
            jLabel3.setForeground(new java.awt.Color(255, 255, 255));
            jLabel3.setText("Tên đề thi:");

            tfTenDeThi.setColumns(20);
            tfTenDeThi.setRows(5);
            tfTenDeThi.setText(deThi.getTenDeThi());
            jScrollPane1.setViewportView(tfTenDeThi);

            jLabel4.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
            jLabel4.setForeground(new java.awt.Color(255, 255, 255));
            jLabel4.setText("Tên môn học:");

            cbbMonHoc.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    cbbMonHocActionPerformed(evt);
                }
            });

            cbbMonHoc.setSelectedItem(deThi.getMonHoc());

            button1.setBackground(new java.awt.Color(58, 122, 141));
            button1.setForeground(new java.awt.Color(255, 255, 255));
            button1.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Desktop\\SoloSmart\\LTPTJAVA_ExamApp\\SoloSmart\\src\\main\\resources\\Image\\icons8-excel-30.png")); // NOI18N
            button1.setText("Tải đề thi từ file");
            button1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
            button1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    button1ActionPerformed(evt);
                }
            });

            javax.swing.GroupLayout circleBackgroundPanel1Layout = new javax.swing.GroupLayout(circleBackgroundPanel1);
            circleBackgroundPanel1.setLayout(circleBackgroundPanel1Layout);
            circleBackgroundPanel1Layout.setHorizontalGroup(
                    circleBackgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, circleBackgroundPanel1Layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addGroup(circleBackgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(button1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jScrollPane1)
                                            .addComponent(sliderGradient1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
                                            .addComponent(btnTaoDeThi, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, circleBackgroundPanel1Layout.createSequentialGroup()
                                                    .addComponent(jLabel1)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addComponent(cbbMonHoc, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, circleBackgroundPanel1Layout.createSequentialGroup()
                                                    .addGroup(circleBackgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(jLabel4))
                                                    .addGap(0, 0, Short.MAX_VALUE)))
                                    .addContainerGap())
            );
            circleBackgroundPanel1Layout.setVerticalGroup(
                    circleBackgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(circleBackgroundPanel1Layout.createSequentialGroup()
                                    .addGap(8, 8, 8)
                                    .addGroup(circleBackgroundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel1)
                                            .addComponent(jLabel2))
                                    .addGap(18, 18, 18)
                                    .addComponent(sliderGradient1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(cbbMonHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnTaoDeThi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addContainerGap())
            );

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
            this.setLayout(layout);
            layout.setHorizontalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGap(0, 0, 0)
                                    .addComponent(circleBackgroundPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(listcauHoiDeThi1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGap(0, 0, 0))
            );
            layout.setVerticalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(listcauHoiDeThi1, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
                            .addComponent(circleBackgroundPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            );
        }

        private void sliderGradient1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderGradient1StateChanged
            jLabel2.setText(sliderGradient1.getValue() + " câu hỏi");
            listcauHoiDeThi1.updateCauHoi(sliderGradient1.getValue());
        }//GEN-LAST:event_sliderGradient1StateChanged

        private void btnTaoDeThiActionPerformed(java.awt.event.ActionEvent evt) {
//GEN-FIRST:event_btnTaoDeThiActionPerformed
            try {

                List<CauHoiDeThi> listCauHoi = listcauHoiDeThi1.getDsCauHoiDeThis();
                if (!listcauHoiDeThi1.isDone()) {
                    return;
                }
                List<Boolean> res = new ArrayList<>();

                // Create new exam
                DeThi deThi = new DeThi();
                deThi.setMaDeThi(maDeThi);
                deThi.setLinkFile("");
                deThi.setMonHoc(cbbMonHoc.getSelectedItem().toString());
                deThi.setSoLuongCauHoi(listCauHoi.size());
                deThi.setTenDeThi(tfTenDeThi.getText().trim());
                deThi.setTrangThai("enable");
                deThi.setNganHangDeThi(new NganHangDeThi());
                deThi.setTaiKhoan(new TaiKhoan(Main_GUI.tk.getMaTaiKhoan()));

                // Add exam to database
                res.add(deThi_DAO.addDeThi(deThi));

                // Add all questions to database
                for (CauHoiDeThi item : listCauHoi) {
                    CauHoi cauHoi = item.getCauHoi();
                    cauHoi.setDeThi(new DeThi(maDeThi));
                    List<LuaChons> dsLuaChons = cauHoi.getDsLuaChon();
                    res.add(cauHoiDao.addCauHoi(cauHoi));
                    for (LuaChons dsLuaChon : dsLuaChons) {
                        res.add(dsLuaChonDao.themLuaChon(
                                cauHoi.getMaCauHoi(),
                                dsLuaChon.getLuaChon(),
                                dsLuaChon.isDapAnDung()
                        ));
                    }
                }
                // Check results
                if (res.contains(false)) {
                    JOptionPane.showMessageDialog(this, "Thêm đề thi thất bại", "Lỗi", JOptionPane.ERROR_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Thêm đề thi thành công", "Thành công", JOptionPane.INFORMATION_MESSAGE);
                    // Optionally clear the form or do other cleanup
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Lỗi: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
            }
        }//GEN-LAST:event_btnTaoDeThiActionPerformed
        
        private void cbbMonHocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbMonHocActionPerformed
            // TODO add your handling code here:
        }//GEN-LAST:event_cbbMonHocActionPerformed

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
        try {
            JnaFileChooser fileChooser = new JnaFileChooser();
            if (fileChooser.showOpenDialog(null)) {
                File selectedFile = fileChooser.getSelectedFile();
                String filePath = selectedFile.getAbsolutePath();

                // Đọc file Word
                FileInputStream fis = new FileInputStream(filePath);
                XWPFDocument document = new XWPFDocument(fis);
                List<XWPFParagraph> paragraphs = document.getParagraphs();

                String examTitle = "";
                int questionCount = 0;
                String subject = "";
                List<String> questions = new ArrayList<>();
                List<String> correctAnswers = new ArrayList<>();
                Map<String, List<String>> answersMap = new LinkedHashMap<>();
                Map<String, String> loiGiaiMap = new LinkedHashMap<>();

                String currentQuestion = null;
                List<String> currentAnswers = new ArrayList<>();
                String currentCorrect = "";
                String currentLoiGiai = "";

                for (XWPFParagraph para : paragraphs) {
                    String text = para.getText().trim();

                    if (text.startsWith("ĐỀ THI:")) {
                        examTitle = text.replace("ĐỀ THI:", "").trim();
                    } else if (text.startsWith("Số lượng câu hỏi:")) {
                        questionCount = Integer.parseInt(text.replace("Số lượng câu hỏi:", "").trim());
                    } else if (text.startsWith("Môn học:")) {
                        subject = text.replace("Môn học:", "").trim();
                    } else if (text.matches("^\\d+\\.\\s.*")) {
                        // Nếu đã có câu hỏi trước đó, lưu lời giải tương ứng
                        if (currentQuestion != null) {
                            correctAnswers.add(currentCorrect);
                            answersMap.put(currentQuestion, new ArrayList<>(currentAnswers));
                            loiGiaiMap.put(currentQuestion, currentLoiGiai);
                        }

                        // Bắt đầu câu hỏi mới
                        currentQuestion = text.substring(text.indexOf(".") + 1).trim();
                        questions.add(currentQuestion);
                        currentAnswers = new ArrayList<>();
                        currentCorrect = "";
                        currentLoiGiai = "";
                    } else if (text.matches("^[A-D]\\..*")) {
                        currentAnswers.add(text);
                    } else if (text.startsWith("Đáp án đúng:")) {
                        currentCorrect = text.replace("Đáp án đúng:", "").trim();
                    } else if (text.startsWith("Lời giải:")) {
                        currentLoiGiai = text.replace("Lời giải:", "").trim();
                    }
                }

                // Xử lý câu hỏi cuối cùng
                if (currentQuestion != null) {
                    correctAnswers.add(currentCorrect);
                    answersMap.put(currentQuestion, new ArrayList<>(currentAnswers));
                    loiGiaiMap.put(currentQuestion, currentLoiGiai);
                }

                document.close();

                // Tạo đối tượng DeThi
                String maDeThi = deThi_DAO.generateMa();
                NganHangDeThi nganHang = new NganHangDeThi(null);
                TaiKhoan tk = Main_GUI.tk;

                DeThi deThi = new DeThi(
                        maDeThi,
                        questionCount,
                        subject,
                        "", // linkFile
                        "enable",
                        tk,
                        nganHang,
                        examTitle
                );

                List<CauHoi> danhSachCauHoi = new ArrayList<>();

                for (int i = 0; i < questions.size(); i++) {
                    String questionText = questions.get(i);
                    String maCauHoi = cauHoiDao.generateMa();
                    String correct = correctAnswers.get(i);
                    List<String> answerList = answersMap.get(questionText);
                    String loiGiai = loiGiaiMap.getOrDefault(questionText, "");
                    Thread.sleep(100);

                    List<LuaChons> luaChonList = new ArrayList<>();
                    for (String ans : answerList) {
                        // Tách "A. jack" -> "jack"
                        String optionKey = ans.substring(0, 1);
                        String content = ans.substring(2).trim();
                        boolean isCorrect = optionKey.equalsIgnoreCase(correct);
                        luaChonList.add(new LuaChons(content, isCorrect));
                    }

                    CauHoi ch = new CauHoi(
                            maCauHoi,
                            "Vận dụng",
                            questionText,
                            1,
                            luaChonList,
                            loiGiai,
                            "enable",
                            deThi
                    );

                    danhSachCauHoi.add(ch);
                }

                boolean res1 = deThi_DAO.addDeThi(deThi);
                if (res1) {
                    for (CauHoi ch : danhSachCauHoi) {
                        boolean res2 = cauHoiDao.addCauHoi(ch);
                        if (res2) {
                            for (LuaChons lc : ch.getDsLuaChon()) {
                                dsLuaChonDao.themLuaChon(ch.getMaCauHoi(), lc.getLuaChon(), lc.isDapAnDung());
                            }
                        }
                    }
                }

                JOptionPane.showMessageDialog(null, "Thêm đề thi thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_button1ActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        try {

                List<CauHoiDeThi> listCauHoi = listcauHoiDeThi1.getDsCauHoiDeThis();
                if (!listcauHoiDeThi1.isDone()) {
                    return;
                }
                // Create new exam
                DeThi deThi = new DeThi();
                deThi.setMaDeThi(maDeThi);
                deThi.setLinkFile("");
                deThi.setMonHoc(cbbMonHoc.getSelectedItem().toString());
                deThi.setSoLuongCauHoi(listCauHoi.size());
                deThi.setTenDeThi(tfTenDeThi.getText().trim());
                deThi.setTrangThai("enable");
                deThi.setNganHangDeThi(new NganHangDeThi());
                deThi.setTaiKhoan(new TaiKhoan(Main_GUI.tk.getMaTaiKhoan()));
                deThi_DAO.updatDeThi(deThi);

                // Add all questions to database
                for (CauHoiDeThi item : listCauHoi) {
                    CauHoi cauHoi = item.getCauHoiForUpdate();
                    List<String> dsLuaChonCu = item.getDsLuaChonCu();
                    cauHoi.setDeThi(new DeThi(maDeThi));
                    List<LuaChons> dsLuaChons = cauHoi.getDsLuaChon();
                    cauHoiDao.updateCauHoi(cauHoi);
                    int index = 0;
                    for (LuaChons dsLuaChon : dsLuaChons) {
                        dsLuaChonDao.capNhatLuaChon(
                                cauHoi.getMaCauHoi(),
                                dsLuaChonCu.get(index),
                                dsLuaChon.getLuaChon(),
                                dsLuaChon.isDapAnDung()
                        );
                    }
                }
                JOptionPane.showMessageDialog(null, "Cập nhật đề thi thành công", "Thành công", JOptionPane.INFORMATION_MESSAGE);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Lỗi: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
            }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnHuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyActionPerformed
       //btn hủy
    }//GEN-LAST:event_btnHuyActionPerformed

        private void loadListMonHoc() {
            List<MonHoc> listMonHoc = monHoc_DAO.getDanhSachMonHoc();
            DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
            for (MonHoc item : listMonHoc) {
                model.addElement(item.getTenMonHoc());
            }
            cbbMonHoc.setModel(model);
        }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private Components.Button btnHuy;
    private Components.Button btnSua;
    private Components.Button btnTaoDeThi;
    private Components.Button button1;
    private Components.ComboBoxSuggestion cbbMonHoc;
    private Components.CircleBackgroundPanel circleBackgroundPanel1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private Components.ListcauHoiDeThi listcauHoiDeThi1;
    private Components.SliderGradient sliderGradient1;
    private javax.swing.JTextArea tfTenDeThi;
    // End of variables declaration//GEN-END:variables
}
